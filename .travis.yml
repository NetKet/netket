#########################
# project configuration #
#########################

# C++ project
language: cpp

dist: trusty
sudo: required

################
# build matrix #
################

matrix:
  include:

  # clang sanitizer
  - os: osx
    osx_image: xcode9.4
    compiler: clang
    env:
      - CMAKE_OPTIONS=-DNETKET_Sanitizer=ON

  - os: osx
    osx_image: xcode8.3
    install:
      - brew upgrade python

  - os: osx
    osx_image: xcode9.4

  - os: linux
    before_install:
      - pyenv global $(pyenv whence 2to3)  # activate all python versions
      - PY_CMD=python3
      - $PY_CMD -m pip install --user --upgrade pip wheel
    compiler: gcc
    env:
      - PYTHON=3.6
      - COMPILER=g++-5
      - CMAKE_OPTIONS=-DUSE_LAPACK=ON
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5','mpich','libmpich-dev', 'libboost-all-dev',
                   'liblapack3','libblas-dev', 'liblapack-dev','liblapacke-dev','python-numpy', 'python-scipy', 'python-matplotlib',
                   'python-tk']

  - os: linux
    before_install:
      - pyenv global $(pyenv whence 2to3)  # activate all python versions
      - PY_CMD=python3
      - $PY_CMD -m pip install --user --upgrade pip wheel
    compiler: gcc
    env:
      - PYTHON=3.6
      - COMPILER=g++-6
      - CMAKE_OPTIONS=-DUSE_LAPACK=ON
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-6','mpich','libmpich-dev', 'libboost-all-dev','liblapack3',
                   'libblas-dev', 'liblapack-dev','liblapacke-dev','python-numpy', 'python-scipy', 'python-matplotlib',
                   'python-tk']

  - os: linux
    before_install:
      - pyenv global $(pyenv whence 2to3)  # activate all python versions
      - PY_CMD=python3
      - $PY_CMD -m pip install --user --upgrade pip wheel
    compiler: clang
    env:
      - PYTHON=3.6
      - COMPILER=clang++-5.0
      - CXXFLAGS=-std=c++1z
      - CMAKE_OPTIONS=-DUSE_LAPACK=ON
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0']
        packages: ['g++-6', 'clang-5.0', 'mpich','libmpich-dev', 'libboost-all-dev',
                   'liblapack3','libblas-dev', 'liblapack-dev','liblapacke-dev','python-numpy', 'python-scipy', 'python-matplotlib',
                   'python-tk']


cache:
  apt: true
  directories:
    - $HOME/Library/Caches/Homebrew


################
# build script #
################

script:
  # get CMake and Mpi (only for systems with brew - macOS)
  - |
     if [[ (-x $(which brew)) ]]; then
       brew install cmake
       brew install openmpi
       brew install --without-python boost
       brew install lapack
       brew upgrade cmake
       brew upgrade openmpi
       cmake --version
       export PATH=$PATH:/Users/travis/Library/Python/2.7/bin
     fi
  # make sure CXX is correctly set
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

  # Get all required Python packages
  - pip install numpy scipy matplotlib networkx pytest mpi4py --user	

  # show OS/compiler version
  - uname -a
  - $CXX --version
  - python --version

  # compile and execute Python unit tests
  - CMAKE_OPTIONS="'${CMAKE_OPTIONS} -DCMAKE_CXX_COMPILER=${COMPILER} -DCMAKE_CXX_FLAGS=${CXXFLAGS}'"
  - echo "$CMAKE_OPTIONS"
  - pip install -v . --user --install-option=--cmake-args=${CMAKE_OPTIONS}
  - pytest --verbose Test
  - cd ..
